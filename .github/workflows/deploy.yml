name: Deploy
run-name: ${{ github.actor }} is deploying üöÄ
on: [push]
jobs:
  build-and-zip-lambdas:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install and Zip Subdirectories
        run: |
          find terraform/lambda_functions -mindepth 1 -maxdepth 1 -type d | while read dir; do
            echo "Processing directory: $dir"
            cd "$dir"
            npm install
            zip -r "../$(basename "$dir").zip" .
            cd ..
          done
  Deploy-Infra:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.6.3"
      - name: Terraform Init
        run: terraform init
        working-directory: terraform
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Validate
        run: terraform validate -no-color
        working-directory: terraform

      - name: Terraform Plan
        run: terraform plan -no-color
        working-directory: terraform
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_openweather_api_key: ${{ secrets.OPENWEATHER_API_KEY }}

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: terraform
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_openweather_api_key: ${{ secrets.OPENWEATHER_API_KEY }}

      - run: echo "üçè This job's status is ${{ job.status }}."
